---
name: Publish Docker image
on:
  release:
    types:
      - published
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
  IMAGE_NAME: personal-api
jobs:
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy_to_environment:
    name: run playbook for deployment
    runs-on: ubuntu-latest
    needs: push_to_registry
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Setup SSH
        shell: bash
        run: |
          eval `ssh-agent -s`
          mkdir -p /home/runner/.ssh/
          touch /home/runner/.ssh/id_rsa
          echo -e "${{env.SSH_KEY}}" > /home/runner/.ssh/id_rsa
          chmod 700 /home/runner/.ssh/id_rsa
          ssh-keyscan -t rsa,dsa,ecdsa,ed25519 ${{env.SSH_HOST}} >> /home/runner/.ssh/known_hosts

      - name: Run ansible script
        shell: bash
        run: |
          service ssh status
          cd infrastructure/ansible
          ansible-galaxy install geerlingguy.docker /etc/ansible/roles
          echo -e "${{env.ANSIBLE_VAULT_PASS}}" >> pass
          ansible-playbook -i ${{ env.ENVIRONMENT }} deployment.yaml --vault-password-file pass
